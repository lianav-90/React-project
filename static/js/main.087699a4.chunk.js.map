{"version":3,"sources":["Components/BlogCard/BlogCard.jsx","Components/BloggerCard/BloggerCard.jsx","API/URL.js","API/People.js","API/Posts.js","API/API.js","Screens/Home/Home.jsx","Screens/Navigation/Nav.jsx","Services/Storage.js","Screens/Login/Login.jsx","Components/Modal/Modal.jsx","Components/Workspace/Workspace.jsx","Screens/Registration/Registration.jsx","App.js","index.js"],"names":["BlogCard","posts","buttonOpen","handleRemove","handleUpdate","map","blog","className","key","id","title","description","onClick","bind","BloggerCard","bloggers","blogger","lastname","baseURL","routs","People","user","fetch","method","headers","body","JSON","stringify","then","res","json","Posts","post","API","this","people","Home","useState","setBloggers","setPosts","useEffect","get","data","Nav","onTabChange","bar","Storage","value","localStorage","setItem","err","console","log","response","getItem","parse","removeItem","Login","email","password","setUser","onHandleChange","e","target","name","onChange","type","placeholder","login","ok","alert","set","userId","onSubmit","Modal","onShow","author","setPost","data-dismiss","aria-label","aria-hidden","htmlFor","newPost","personId","Error","catch","Workspace","props","loggedUser","setLoggedUser","showModal","setShowModal","getUser","getUserPosts","logout","remove","filter","update","username","Registration","handleInputChange","register","App","tab","setTab","newTab","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.087699a4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst BlogCard = ({posts, buttonOpen, handleRemove, handleUpdate}) => {\r\n\r\n    return (\r\n        <div>\r\n            {posts.map(blog => {\r\n            return (\r\n                <div className=\"card\" key={blog.id}>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{blog.title}</h5>\r\n                        <p className=\"card-text\">{blog.description}</p>\r\n                        {buttonOpen && <button className=\"postbutton\" onClick={handleUpdate.bind(null, blog.id)} >Update</button>}\r\n                        {buttonOpen && <button className=\"postbutton\" onClick={handleRemove.bind(null, blog.id)}>Remove</button>}\r\n                    </div>\r\n                </div>\r\n            )})}\r\n        </div>   \r\n    )\r\n}\r\n\r\nexport default BlogCard\r\n","import React from 'react'\r\n\r\n\r\nfunction BloggerCard({ bloggers }) {\r\n    return (\r\n        <div>\r\n            {bloggers.map(blogger => {\r\n            return (\r\n                <div className=\"card\" key={blogger.id}>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{blogger.lastname}</h5>  \r\n                    </div>\r\n                </div>\r\n            )})}\r\n        </div>    \r\n    )\r\n}\r\n\r\nexport default BloggerCard\r\n","export const baseURL = 'https://it-blog-posts.herokuapp.com/api/'\r\n\r\n\r\n","import {baseURL} from './URL'\r\n\r\nconst routs = {\r\n    get: 'people/',\r\n    login: 'people/login'\r\n}\r\nexport class People {\r\n\r\n    login(user) {\r\n        return fetch(`${baseURL}${routs.login}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(user)\r\n        });\r\n    }\r\n\r\n    get() {\r\n        return fetch(`${baseURL}${routs.get}`, {\r\n            method: 'GET'\r\n        });\r\n    }\r\n\r\n    getUser(id) {\r\n        return fetch(`${baseURL}${routs.get}${id}`)\r\n              .then(res => res.json())\r\n    }\r\n    \r\n    register(user) {\r\n        return fetch(`${baseURL}${routs.get}`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify(user),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })     \r\n    }\r\n}\r\n\r\nexport default People","import {baseURL} from './URL'\r\n\r\nconst endPoint = 'posts/';\r\n\r\nclass Posts {\r\n\r\n    get() {\r\n        return fetch(`${baseURL}${endPoint}`)\r\n    }\r\n\r\n    getUserPosts(id) {\r\n        return fetch(`${baseURL}people/${id}/${endPoint}`)\r\n    }\r\n\r\n    set(post) {\r\n      return fetch(`${baseURL}${endPoint}`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(post),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n    }\r\n\r\n    update(id, post) {\r\n        return fetch(`${baseURL}${endPoint}${id}`, {\r\n          method: \"PUT\",\r\n          body: JSON.stringify(post),\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n    }\r\n\r\n    remove(id) {\r\n        return fetch(`${baseURL}${endPoint}${id}`, {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n    }\r\n}\r\n\r\nexport default Posts","import People from './People';\r\nimport Posts from './Posts'\r\n\r\nclass myAPI {\r\n    constructor() {\r\n        this.people = new People();\r\n        this.posts = new Posts()\r\n    }\r\n}\r\n\r\nconst API = new myAPI();\r\nexport default API","import React, { useState, useEffect } from 'react';\r\nimport BlogCard from '../../Components/BlogCard/BlogCard';\r\nimport BloggerCard from '../../Components/BloggerCard/BloggerCard';\r\nimport API from '../../API/API';\r\n\r\nfunction Home() {\r\n    \r\n    const [bloggers, setBloggers] = useState([]);\r\n    const [posts, setPosts] = useState([]);\r\n    useEffect(() => {\r\n        API.people.get().then(res => res.json()).then(data => setBloggers(data));\r\n        API.posts.get().then(res => res.json()).then(data => setPosts(data));\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    {<BloggerCard bloggers={bloggers}/>}\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <BlogCard posts={posts}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react'\r\n\r\n\r\nconst Nav = ({onTabChange, bar}) => {\r\n\r\n    return (\r\n        <div className=\"container-fluid top\">\r\n            <ul className=\"nav nav-tabs\">\r\n                <li className=\"nav-item\">\r\n                    <button onClick={onTabChange.bind(null, \"Home\")} className=\"nav-link\">Home</button>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <button onClick={onTabChange.bind(null, \"Login\")} className=\"nav-link\">Login</button>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <button onClick={onTabChange.bind(null, \"Registration\")} className=\"nav-link\">Registration</button>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <button onClick={onTabChange.bind(null, \"Workspace\")} className=\"nav-link\">Workspace</button> \r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default Nav;","class Storage {\r\n\r\n    static set(key, data) {\r\n        try {\r\n            const value = JSON.stringify(data);\r\n            localStorage.setItem(key, value);\r\n        } catch(err) {\r\n            console.log(err)\r\n        }   \r\n    }\r\n\r\n    static get(key) {\r\n        try {\r\n            const response = localStorage.getItem(key);\r\n            const data = JSON.parse(response) || null;\r\n            return data;\r\n        } catch(err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    static remove(key) {\r\n        try {\r\n            localStorage.removeItem(key);\r\n        } catch(err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n}\r\n\r\nexport default Storage","import React, {useState} from 'react'\r\nimport API from '../../API/API';\r\nimport Storage from '../../Services/Storage';\r\n\r\nfunction Login({ onTabChange }) {\r\n\r\n    const [user, setUser] = useState({email: \"\", password: \"\"})\r\n\r\n    const onHandleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setUser({\r\n            ...user,\r\n            [name]: value\r\n        })\r\n    } \r\n\r\n    const onSubmit = (user) => {\r\n        if (user.email && user.password) {\r\n            API.people.login(user)\r\n            .then(res => {\r\n                if(!res.ok) {\r\n                    alert(\"WRONG EMAIL or PASSWORD\")\r\n                }\r\n                return res.json()     \r\n            })\r\n            .then(user => {\r\n                localStorage.setItem(\"LOGIN\",user.id)\r\n                Storage.set(\"user\", user.userId);\r\n                onTabChange(\"Workspace\");\r\n            })\r\n        } else {\r\n            alert(\"Empty fields!!!\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <h3>Login</h3>\r\n            <div>\r\n                <input onChange={onHandleChange} name=\"email\" type=\"text\" placeholder=\"Email\"/>\r\n            </div>\r\n            <div>\r\n                <input onChange={onHandleChange} name=\"password\" type=\"password\" placeholder=\"Password\"/>\r\n            </div>\r\n            <div>\r\n                <button onClick={() => onSubmit(user)}>Sign in</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useState } from 'react';\r\nimport API from '../../API/API';\r\nimport Storage from '../../Services/Storage';\r\n\r\nconst Modal = ({ onShow, author }) => {\r\n\r\n    const [post, setPost] = useState({ title: \"\", description: \"\" });\r\n\r\n    const onHandleChange = (e) => {\r\n        const {name, value} = e.target;\r\n        setPost ({\r\n          ...post, \r\n          [name]: value\r\n        })\r\n    }\r\n\r\n    const createPost = (post) => {\r\n        const newPost = {\r\n            author: author,\r\n            description: post.description,\r\n            personId: Storage.get(\"user\"),\r\n            title: post.title\r\n        }\r\n\r\n        if (post.title && post.description) {\r\n            onShow();\r\n            API.posts.set(newPost)\r\n            .then(res => {\r\n                if(!res.ok) {\r\n                  throw new Error();\r\n                }\r\n                return res.json()\r\n            })\r\n            .catch(() => {\r\n                alert(\"Invalid data\");\r\n            })  \r\n        } else {\r\n           alert(\"Please fill in the required fields:\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"myModalBack\">\r\n            <div className=\"myModal\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <button onClick={onShow} type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"recipient-name\" className=\"control-label\">Title:</label>\r\n                                    <input onChange={onHandleChange} name=\"title\" value={post.title} type=\"text\" className=\"form-control\" id=\"recipient-name\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"message-text\" className=\"control-label\">Description:</label>\r\n                                    <textarea onChange={onHandleChange} name=\"description\" value={post.description} className=\"form-control\" id=\"message-text\"></textarea>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button onClick={createPost.bind(null, post)} type=\"button\" className=\"postbutton btn btn-primary\">Add</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Modal;","import React, { useState, useEffect } from 'react';\r\nimport API from '../../API/API';\r\nimport Storage from '../../Services/Storage';\r\nimport BlogCard from '../BlogCard/BlogCard';\r\nimport Modal from '../Modal/Modal';\r\n\r\n\r\nconst Workspace = (props) => {\r\n    \r\n    const [loggedUser, setLoggedUser] = useState({});\r\n    const [posts, setPosts] = useState([]);\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const onShow = () => {\r\n        setShowModal (!showModal)\r\n    }\r\n\r\n    const removePost = (id) => {\r\n        API.posts.remove(id);\r\n        setPosts(posts.filter(post => post.id !== id));\r\n    }\r\n\r\n    const updatePost = (id) => {\r\n        API.posts.update(id)\r\n        setPosts(posts.filter(post => post.id === id));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!loggedUser.id) {\r\n            API.people.getUser(Storage.get(\"user\")).then(data => setLoggedUser(data));\r\n        }\r\n        if (loggedUser.id) {\r\n            API.posts.getUserPosts(Storage.get(\"user\")).then(res => res.json()).then(data => setPosts(data));\r\n        }\r\n    }, [loggedUser, showModal])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"d-flex justify-content-between\">\r\n                <button className=\"postbutton create\" onClick={onShow}>Create new post</button>\r\n                {!Storage.get(\"token\") && <button className=\"postbutton\" onClick= {props.logout}>Logout</button>}\r\n            </div>\r\n            <div className=\"workspace\">\r\n                <BlogCard posts={posts} buttonOpen = {true} handleRemove={removePost} handleUpdate={updatePost}/>\r\n            </div>\r\n            {showModal && <Modal author={loggedUser.username} onShow={onShow} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Workspace;\r\n","import React, { useState } from 'react';\r\nimport API from '../../API/API'\r\n\r\n\r\nfunction Registration ({ onTabChange }) {\r\n\r\n    const [user, setUser] = useState({username: \"\", lastname: \"\", email: \"\", password: \"\"})\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setUser({\r\n            ...user,\r\n            [name]: value\r\n        })\r\n    } \r\n\r\n    const onRegister = (user) => {\r\n        \r\n        if (user.username && user.lastname && user.email && user.password) {\r\n            API.people.register(user)\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    onTabChange (\"Login\");\r\n                } else {\r\n                    alert(\"Something went wrong\")\r\n                }\r\n                return res.json();\r\n            })\r\n        }  \r\n    }\r\n       \r\n    return (\r\n        <div className=\"container register\">\r\n            <h3>Register</h3>\r\n            <div>\r\n                <input type =\"text\" name=\"username\" onChange={handleInputChange}  placeholder=\"Firstname\"/>\r\n            </div>\r\n            <div>\r\n                <input type =\"text\" name=\"lastname\" onChange={handleInputChange}  placeholder=\"Lastname\"/>\r\n            </div>\r\n            <div>\r\n                <input type =\"text\" name=\"email\" onChange={handleInputChange}  placeholder=\"Email\"/>\r\n            </div>\r\n            <div>\r\n                <input type =\"password\" name=\"password\" onChange={handleInputChange}  placeholder=\"Password\"/>\r\n            </div>\r\n            <div>\r\n                <button onClick={onRegister.bind(null, user)} type=\"submit\">Sign up</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n \r\n   \r\nexport default Registration","import React, {useState} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Home from './Screens/Home/Home';\nimport Nav from './Screens/Navigation/Nav';\nimport Login from './Screens/Login/Login';\nimport Workspace from './Components/Workspace/Workspace';\nimport Registration from './Screens/Registration/Registration'\nimport './App.css'\n\n\nfunction App() {\n  \n    const [tab, setTab] = useState({bar: \"Home\"})\n\n    const onTabChange = (newTab) => {\n        setTab({bar: newTab})\n    }\n\n    const logout =()=>{\n        localStorage.removeItem(\"Login\")\n        setTab({bar: \"Login\"})\n    }\n\n    return (\n        <div className=\"App\">\n            <Nav onTabChange={onTabChange} />\n            {(tab.bar === \"Home\") && <Home onTabChange={onTabChange} />}\n            {(tab.bar === \"Login\") && <Login onTabChange={onTabChange} />}\n            {(tab.bar === \"Registration\") && <Registration onTabChange={onTabChange }/>}\n            {(tab.bar === \"Workspace\") && <Workspace onTabChange={onTabChange} logout={logout} />}\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}